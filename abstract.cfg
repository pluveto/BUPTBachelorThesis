%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                  %
%   Copyright (c) 2010 - 2011 Caspar Zhang <casparant@gmail.com>   %
%                                                                  %
%   This copyrighted material is made available to anyone wishing  %
%   to use, modify, copy, or redistribute it subject to the terms  %
%   and conditions of the GNU General Public License version 2.    %
%                                                                  %
%   This program is distributed in the hope that it will be        %
%   useful, but WITHOUT ANY WARRANTY; without even the implied     %
%   warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR        %
%   PURPOSE. See the GNU General Public License for more details.  %
%                                                                  %
%   You should have received a copy of the GNU General Public      %
%   License along with this program; if not, write to the Free     %
%   Software Foundation, Inc., 51 Franklin Street, Fifth Floor,    %
%   Boston, MA 02110-1301, USA.                                    %
%                                                                  %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% 你只需要修改下面内容就可以完成中英文摘要，
% 这要求你具有一定的LaTeX基础，但是还是那句话，
% 如果你足够聪明，不具有LaTeX基础也可以完成。

% 中文摘要
\def\abstractzh{

Serverless计算作为一种新型的计算模式，在云计算和边缘计算领域被广泛应用。
本研究针对 Serverless 计算的自动伸缩问题，设计了一种主要基于 ARIMA 模型的的自动伸缩算法，
并对比了其他常见预测模型，对其性能进行了全面的比较评估。该算法结合了负载预测和自动伸缩策略，
能够根据应用程序的负载变化动态调整计算资源。并且在基础算法基础上引入了自动选择最优模型超参数的功能，
更利于实际应用。通过引入多种预测模型（如MA、VAR、ARIMA和Prophet模型）并对比和改进，相较于
目前主流的基于阈值的伸缩，我们的算法提高了负载预测的准确性，实现了对模型的自动训练、动态调整和优化。

在实现算法部署的过程中，我们在Kubernetes集群上设计了一种基于Prometheus的监控方案，
此方案能够收集Serverless应用程序的工作负载数据，动态地根据历史数据，
预测下一时间段的负载，进而通过HPA控制器自动调整Serverless函数的副本数量。

实验结果表明，这种智能化的自动伸缩算法可以有效预测副本数量，
提高Serverless应用程序的资源利用率，减少计算资源浪费，同时保证应用程序的稳定性和可靠性。

}

% 中文关键字 
% TODO: 改成可变长度的
\def\abszhkeyone{Serverless}
\def\abszhkeytwo{云计算}
\def\abszhkeythree{时序预测}
\def\abszhkeyfour{自动伸缩}
\def\abszhkeyfive{ARIMA}

% ABSTRACT
\def\abstracten{
As a nascent computing paradigm, Serverless computing has gained traction in the
 domains of cloud and edge computing. This study presents a workload-oriented 
 auto-scaling algorithm designed specifically for Serverless computing. 
 This algorithm, marrying load prediction and auto-scaling policy, can 
 dynamically allocate computational resources in accordance with application 
 load. Leveraging a range of models such as MA, VAR, ARIMA, and Prophet, it 
 seeks to enhance the precision of load prediction. It self-trains and dynamically 
 scales computational resources, continuously optimizing models through data obtained
 via service monitoring.
 
 When deployed on a Kubernetes cluster, a Prometheus-based
 monitoring solution is designed in this paper. This solution aggregates metric data
  from Serverless applications and leverages statistical model training features 
  to forecast future load, subsequently utilizing the HPA controller to auto-adjust 
  the replica count of Serverless functions.
  
  The findings illustrate that the 
  proposed smart algorithm can effectively estimate replica counts, augmenting 
  Serverless application resource utilization, curbing computational resource 
  wastage, and bolstering application stability and reliability.

}

% Key Words 
% TODO: 改成可变长度的
\def\absenkeyone{Serverless}
\def\absenkeytwo{Cloud computing}
\def\absenkeythree{Time series prediction}
\def\absenkeyfour{Auto scaling}
\def\absenkeyfive{ARIMA}


